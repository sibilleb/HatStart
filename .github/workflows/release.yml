name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install platform-specific dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-0 libnotify4 libnss3 libxss1 libxtst6 xdg-utils libatspi2.0-0 libdrm2 libgbm1 libxcb-dri3-0

    - name: Build TypeScript
      run: npm run build

    - name: Build Electron
      run: npm run electron:compile

    - name: Build distributables
      run: npm run electron:dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEBUG: electron-builder

    - name: List release directory (debug)
      run: ls -la release/ || echo "No release directory"
      continue-on-error: true

    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: hatstart-mac
        path: release/*.dmg
        if-no-files-found: warn

    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: hatstart-win
        path: release/*.exe
        if-no-files-found: warn

    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: hatstart-linux
        path: release/*.AppImage
        if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
        files: release-artifacts/**/*
        generate_release_notes: true
        body: |
          ## HatStart ${{ github.ref_name }}
          
          ### Installation
          - **macOS**: Download the .dmg file
          - **Windows**: Download the .exe installer
          - **Linux**: Download the .AppImage file
          
          ### What's Changed
          <!-- Release notes will be auto-generated -->